# -----------------------------------------------------------------------------------------
#  _                    _   _  __          _     _           _
# | |    ___   ___ __ _| | | |/ /___ _   _| |__ (_)_ __   __| |___
# | |   / _ \ / __/ _` | | | ' // _ \ | | | '_ \| | '_ \ / _` / __|
# | |__| (_) | (_| (_| | | | . \  __/ |_| | |_) | | | | | (_| \__ \
# |_____\___/ \___\__,_|_| |_|\_\___|\__, |_.__/|_|_| |_|\__,_|___/
#                                    |___/
# -----------------------------------------------------------------------------------------
# For our configuration SUPER is already bound, so we have to modify this to ALT.
# This is because Hyprland is running on a headless system, and the system we tunnel in
# from uses SUPER for it's mainMod key.
# Unfortunately, this required modification means heavy modification to the original
# keybinding scheme.
#
# Furthermore, due to the system running hyprland is headless, there are simply many
# features available we will never use, which possess the potential to get in the way.
# We will add these undesired features to this file, and comment them out.
# ----------------------------------------------------------------------------------------
# IMPORTANT! NEW BIND FLAGS |
# --------------------------
#
# bind[flags] = ...
#
# Ex: bindrl = MOD, KEY, exec, amongus
#
# l -> locked, will also work when an input inhibitor (e.g. a lockscreen) is active.
# r -> release, will trigger on release of a key.
# c -> click, will trigger on release of a key or button as long as the mouse cursor stays inside binds:drag_threshold.
# g -> drag, will trigger on release of a key or button as long as the mouse cursor moves outside binds:drag_threshold.
# o -> longPress, will trigger on long press of a key.
# e -> repeat, will repeat when held.
# n -> non-consuming, key/mouse events will be passed to the active window in addition to triggering the dispatcher.
# m -> mouse, see below.
# t -> transparent, cannot be shadowed by other binds.
# i -> ignore mods, will ignore modifiers.
# s -> separate, will arbitrarily combine keys between each mod/key, see [Keysym combos](#keysym-combos) above.
# d -> has description, will allow you to write a description for your bind.
# p -> bypasses the app's requests to inhibit keybinds.
# ----------------------------------------------------------------------------------
# Key bind Submap blocks |
# -----------------------
#
# Submaps allow for Hyper to be activate a "keybind mode" similar to VIM modes.
#
# # Establish the bind to activate the mode
# bind = $mainMod SHIFT, $PREFIX_KEY, submap, $SUBMAP_NAME
#
# # Denote the beginning of a submap block
# submap = resize
#
# # Define your mode specific binds, using a blank space instead of your $mainMod
# bind = , $PREFIX_KEY, $ACTION_OR COMMAND
#
# # afterward you must reset the mode to return to the normal keymap
# # Here escape is used to accomplish this.
# bind = , escape, submap, reset
#
# # Close the submap block.
# submap = reset
#
# Submaps can even be nested --> https://wiki.hypr.land/Configuring/Binds/#nesting
# ==================================================================================

# -------------------------
#   User Config Variables
# >-----------------------<
$mainMod = ALT

# Default
$hyprcnf = $HOME/.config/hypr/default
$scriptsDir = $HOME/.config/hypr/default/scripts

# User Configs
$localcnf = $HOME/.config/hypr/local
$UserScripts = $HOME/.config/hypr/local/scripts

# --------------------------------------------------
# You can place your custom additions below here
# --------------------------------------------------

# bind = $mainMod, A, exec, Something

# --------------------------------------------------------
# Below are  disabled by defauilt, but can be re-enabled.
# --------------------------------------------------------

# bind = $mainMod, X, exec, hyprdrop ghostty -i ghostty_hyprdrop
# exec-once = ghostty
# bind = $mainMod, X, exec, hdrop -b -f -g 2 -h 73 -p t -w 98 ghostty

# bind = $mainMod SHIFT, O, exec, pypr shift_monitors +1      # swaps workspaces between monitors
# bind = $mainMod SHIFT, Z, exec, pypr zoom ++0.5             # zooms in the focused workspace
# bind = $mainMod, Z, exec, pypr zoom                         # toggle zooming

# bind = $mainMod CTRL, S, exec, $scriptsDir/nokill.sh

# bind = $mainMod, O, exec, $scriptsDir/RofiEmoji.sh # emoji
# bind = $mainMod, S, exec, $scriptsDir/RofiSearch.sh # Google search from Rofi
# bind = $mainMod SHIFT, B, exec, $scriptsDir/ChangeBlur.sh # Toggle blur settings
# bind = $mainMod SHIFT, G, exec, $scriptsDir/GameMode.sh # animations ON/OFF
# bind = $mainMod CTRL, L, exec, $scriptsDir/ChangeLayout.sh # Toggle Master or Dwindle Layout
# bind = $mainModd, V, exec, $scriptsDir/ClipManager.sh # Clipboard Manager
# bind = $mainMod SHIFT, N, exec, swaync-client -t -sw # swayNC panel

# Waybar / Bar related
# bind = $mainMod CTRL, T, exec, waybar --config $HOME/.config/hypr/waybar/config
# bind = $mainMod CTRL, X, exec, pkill -SIGUSR1 waybar # Toggle hide/show waybar
# bind = $mainMod CTRL, B, exec, $scriptsDir/WaybarStyles.sh # Waybar Styles Menu
# bind = $mainMod CTRL, W, exec, $scriptsDir/WaybarLayout.sh # Waybar

# Special Keys / Hot Keys
# bindel = , xf86audioraisevolume, exec, $scriptsDir/Volume.sh --inc #volume up
# bindel = , xf86audiolowervolume, exec, $scriptsDir/Volume.sh --dec #volume down
# bindl = , xf86AudioMicMute, exec, $scriptsDir/Volume.sh --toggle-mic #mute mic
# bindl = , xf86audiomute, exec, $scriptsDir/Volume.sh --toggle
# bindl = , xf86Sleep, exec, systemctl suspend  # sleep button
# bindl = , xf86Rfkill, exec, $scriptsDir/AirplaneMode.sh #Airplane mode

# media controls using keyboards
# bindl = , xf86AudioPlayPause, exec, $scriptsDir/MediaCtrl.sh --pause
# bindl = , xf86AudioPause, exec, $scriptsDir/MediaCtrl.sh --pause
# bindl = , xf86AudioPlay, exec, $scriptsDir/MediaCtrl.sh --pause
# bindl = , xf86AudioNext, exec, $scriptsDir/MediaCtrl.sh --nxt
# bindl = , xf86AudioPrev, exec, $scriptsDir/MediaCtrl.sh --prv
# bindl = , xf86audiostop, exec, $scriptsDir/MediaCtrl.sh --stop

# Screenshot keybindings NOTE: You may need to press Fn key as well
# bind = $mainMod, Print, exec, $scriptsDir/ScreenShot.sh --now
# bind = $mainMod SHIFT, Print, exec, $scriptsDir/ScreenShot.sh --area
# bind = $mainMod CTRL, Print, exec, $scriptsDir/ScreenShot.sh --in5 #screenshot in 5 secs
# bind = $mainMod CTRL SHIFT, Print, exec, $scriptsDir/ScreenShot.sh --in10 #screenshot in 10 secs
# bind = ALT, Print, exec, $scriptsDir/ScreenShot.sh --active #take screenshot of active window

# screenshot with swappy (another screenshot tool)
# bind = $mainMod SHIFT, S, exec, $scriptsDir/ScreenShot.sh --swappy

# --------------------------------------------------
# OR You can place your custom additions below Here
# --------------------------------------------------

# bind = $mainMod, A, exec, Something
